:root {
  --background-color-dark: #ececec;
  --form-element-spacing-vertical: .5rem;
  --form-element-spacing-horizontal: .75rem;
  --alert-color: var(--form-element-invalid-active-border-color);
  // see the comment below under ALERTS.
  --alert-color-rgb: 211, 47, 47;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background-color-dark: #0c1217;
  }
}

// BASIC LAYOUT

html, body {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
}

header {
  padding: 1rem 0 0 2rem !important;
}

footer {
  margin-top: auto;
  background-color: var(--background-color-dark);
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE10+/Edge */
  user-select: none; /* Standard */
  & ul, & ul li {
    list-style: none;
    font-size: 90%;
  }
  & li {
    display: inline-block;
  }
  & li:not(:last-child)::after {
    margin: 0 0.25rem;
    content: "Â·";
  }
}

// FORMS

input[type=submit] {
  max-width: 6rem;
}

// ALERTS

div[role=alert] {
  color: var(--alert-color);
  border: calc(var(--border-width) * 1.5) solid var(--alert-color);
  // soon this will be possible:
  // background-color: rgba(from var(--alert-color) r g b, .15);
  // see https://blog.jim-nielsen.com/2021/css-relative-colors
  // but for now, I need to use a second color variable converted to rgb:
  background-color: rgba(var(--alert-color-rgb), .15);
  border-radius: var(--border-radius);
  padding: var(--form-element-spacing-vertical) var(--form-element-spacing-horizontal);
  margin-bottom: var(--spacing);
}

// RESULTS

#results {
  --small-spacing-vertical: calc(var(--typography-spacing-vertical) / 4);
  h2 {
    --font-size: 1.25rem;
    margin-bottom: var(--small-spacing-vertical);
  }
  p {
    margin-bottom: var(--small-spacing-vertical);
  }
  .address {
    margin-bottom: var(--typography-spacing-vertical);
  }
  article {
    padding-bottom: 0;
  }
}